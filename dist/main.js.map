{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/computer.js","webpack:///./src/js/player.js","webpack:///./src/js/health_bar.js","webpack:///./src/js/battle_options.js","webpack:///./src/js/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Computer","health","attackPower","gameHeight","gameWidth","this","height","width","currentHealth","maxHealth","fileName","split","join","img","Image","src","position","y","x","initialPosition","attack","heal","ctx","drawImage","dt","opponent","dmg","Math","floor","random","console","log","healing","move","setTimeout","Player","draw","HealthBar","player","fillStyle","fillRect","font","fillText","BattleOptions","selected","optionsText","options","quit","beginPath","moveTo","lineTo","closePath","stroke","rect","fill","lineWidth","strokeStyle","drawLine","currentPlayer","Game","computer","gameState","activeAttack","playHealth","compHealth","battleOptions","players","chrome","attackText","healText","firefox","ie","safari","changeTurn","document","addEventListener","game","getElementById","getContext","menu","gameOver","overListen","e","keyCode","clearRect","classList","add","window","removeEventListener","gameInput","gameLoop","menuListen","preventDefault","length","action","prevTime","timestamp","playTurn","update","winner","requestAnimationFrame","cancelAnimationFrame","remove"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","// import Player from \"./player\";\n\nexport default class Computer {\n  constructor(health, attackPower, name, gameHeight, gameWidth) { // width only would be used for opponent position\n    // may be better to deconstruct obj to pass in traits from other browsers\n    // const { health, attackPower, name } = NAME OF OBJ PASSED IN \n\n    this.height = 150;\n    this.width = 150;\n    this.gameWidth = gameWidth;\n    this.health = health;\n    this.currentHealth = health;\n    this.maxHealth = health;\n    this.name = name; // only if browsers are ALL made by inputing data into this \n    this.fileName = this.name.split(\" \").join(\"\");\n    this.img = new Image();\n    this.img.src = `../images/${this.fileName}.png`;\n    this.attackPower = attackPower;\n    // this.img = new Image // added img in draw so likely wont need this\n    this.position = { // currently hidden off screen\n      y: 20,\n      x: this.gameWidth - this.width - 40\n    }\n    this.initialPosition = { // currently hidden off screen\n      y: 20,\n      x: this.gameWidth + this.width\n    }\n\n    this.attack = this.attack.bind(this);\n    this.heal = this.heal.bind(this);\n  }\n\n  // computer.js\n  draw(ctx) { \n    const position = this.position;\n    const height = this.height;\n    const width = this.width;\n    ctx.drawImage(this.img, position.x, position.y, height, width);\n  }\n\n  update(dt) {\n    \n  }\n\n  attack(opponent) { // opponent should be instance of player class\n    const dmg = Math.floor(Math.random() * this.attackPower);\n    opponent.health -= dmg;\n    if (opponent.health <= 0) {\n      opponent.health = 0;\n    }\n    console.log(`${this.name} attacked ${opponent.name} for ${dmg} damage!`);\n  }\n\n  heal() { // heal logic that will need to be reworked to consider players AP level\n    const healing = Math.floor(Math.random() * 10) + 5 + this.attackPower / 4;\n    this.health += healing;\n    if (this.health >= 100) {\n      this.health = 100;\n    }\n    console.log(`${this.name} healed for ${healing}!`);\n  }\n\n  playTurn(opponent) { // if health is low and opponent has more than low hp, heal\n    // debugger\n    const move = (this.health < 20 && opponent.health > 20) ? () => this.heal() : (opponent) => this.attack(opponent);\n    // move(opponent);\n    console.log(\"Attacking\")\n    setTimeout(() => move(opponent), 500);\n  }\n\n}","export default class Player {\n  constructor(health, attackPower, name, gameHeight, gameWidth) { // width only would be used for opponent position\n  \n    this.height = 150;\n    this.width = 150;\n    this.health = health;\n    this.currentHealth = health;\n    this.gameHeight = gameHeight;\n    this.gameWidth = gameWidth;\n    this.maxHealth = health;\n    this.attackPower = attackPower;\n    this.name = name; // only if browsers are ALL made by inputing data into this \n    this.fileName = this.name.split(\" \").join(\"\");\n    this.img = new Image();\n    this.img.src = `../images/${this.fileName}.png`;\n    this.position = { // currently set off screen\n      y: this.gameHeight - this.height - 50,\n      x: 40\n    }\n    this.initialPosition = { // currently hidden off screen\n      y: 20,\n      x: -this.width\n    }\n\n    this.attack = this.attack.bind(this);\n    this.draw = this.draw.bind(this);\n  }\n\n  // player.js\n  draw(ctx) {\n    const position = this.position;\n    const height = this.height;\n    const width = this.width;\n    ctx.drawImage(this.img, position.x, position.y, height, width);\n  }\n\n  update(dt) {\n    \n  }\n\n  attack(opponent) { // opponent should be instance of opponent class\n    const dmg = Math.floor(Math.random() * this.attackPower);\n    opponent.health -= dmg;\n    if (opponent.health <= 0) {\n      opponent.health = 0;\n    }\n    console.log(`${this.name} attacked ${opponent.name} for ${dmg} damage!`);\n  }\n\n  attackAnimation() {\n\n  }\n\n  heal() { // just adds health back to \n    const healing = Math.floor(Math.random() * 10) + 5 + this.attackPower / 4;\n    this.health += healing;\n    if (this.health >= 100) {\n      this.health = 100;\n    }\n    console.log(`${this.name} healed for ${healing}!`);\n  }\n\n  healAnimation() {\n\n  }\n\n}","export default class HealthBar {\n  constructor(player) {\n    this.gameHeight = player.gameHeight;\n    this.gameWidth = player.gameWidth;\n    this.height = 25;\n    this.width = player.width * .75;\n    this.player = player;\n    this.draw = this.draw.bind(this);\n    this.position = {\n      x: player.position.x + player.width / 8,\n      y: player.position.y + player.height + 10\n    }\n  }\n\n  update(dt) {\n    // debugger\n    if (this.player.currentHealth === this.player.health) return;\n    if (this.player.currentHealth < this.player.health) {\n      this.player.currentHealth++;\n    }\n    if (this.player.currentHealth > this.player.health) {\n      this.player.currentHealth--;\n    }\n  }\n\n  draw(ctx) {\n    // draw box with player health\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(\n      this.position.x, \n      this.position.y, \n      this.width, \n      this.height\n      );\n    ctx.fillStyle = \"red\";\n    // debugger\n    ctx.fillRect(\n      this.position.x, \n      this.position.y, \n      this.width * (this.player.currentHealth / this.player.maxHealth), // calculates pixels based on current player health\n      this.height\n      );\n    ctx.font = \"16px Arial\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(this.player.currentHealth, this.position.x + this.width / 2.5, this.position.y + this.height - 5);\n  }\n}","export default class BattleOptions {\n  constructor(gameHeight, gameWidth) {\n    this.gameHeight = gameHeight;\n    this.gameWidth = gameWidth;\n    this.height = 125;\n    this.width = 400;\n    this.selected = 0;\n    this.optionsText = [\"Attack\", \"Heal\", \"Quit\"]\n    this.options = [this.attack, this.heal, this.quit];\n    this.position = {\n      x: this.gameWidth - this.width - 50,\n      y: this.gameHeight - this.height - 30\n    }\n  }\n\n  drawLine(ctx, width) {\n    if (this.selected === 0) {\n      ctx.beginPath();\n      ctx.moveTo(width, this.gameHeight - 75);\n      ctx.lineTo(width + 85, this.gameHeight - 75);\n      ctx.closePath();\n      ctx.stroke();\n    } else if (this.selected === 1){\n      ctx.beginPath();\n      ctx.moveTo(width + 115, this.gameHeight - 75);\n      ctx.lineTo(width + 180, this.gameHeight - 75);\n      ctx.closePath();\n      ctx.stroke();\n    } else if (this.selected === 2) {\n      ctx.beginPath();\n      ctx.moveTo(width + 210, this.gameHeight - 75);\n      ctx.lineTo(width + 270, this.gameHeight - 75);\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  draw(ctx){\n    ctx.rect(this.position.x, this.position.y, this.width, this.height);\n    ctx.fillStyle = \"white\";\n    ctx.fill();\n    ctx.lineWidth = 5;\n    ctx.strokeStyle = \"black\";\n    ctx.stroke();\n    const options = this.optionsText.join(\"    \");\n    ctx.font = \"30px Arial\";\n    ctx.fillStyle = \"black\";\n    // ctx.textAlign = \"center\";\n    const width = this.position.x + this.width / 6;\n    ctx.fillText(options, width, this.position.y + this.height / 1.75);\n    this.drawLine(ctx, width);\n  }\n\n  attack(currentPlayer, opponent) {\n    currentPlayer.attack(opponent); // will mainly just work for human player\n    // currentPlayer.attackAnimation();\n  }\n\n  heal(currentPlayer) {\n    currentPlayer.heal(); // will mainly just work for human player\n    // currentPlayer.healAnimation();\n  }\n\n  quit() {\n    // will quit the game\n    // renders html overlay with y and n listeners to confirm\n    // if n go away, if y call reset\n  }\n  \n}","import HealthBar from \"./health_bar\";\nimport BattleOptions from \"./battle_options\";\n\n\nexport default class Game {\n  constructor(player, computer) {\n    this.player = player;\n    this.computer = computer;\n    this.gameState = true;\n    this.activeAttack = false;\n    this.playHealth = new HealthBar(this.player);\n    this.compHealth = new HealthBar(this.computer);\n    this.battleOptions = new BattleOptions(this.player.gameHeight, this.player.gameWidth);\n    this.currentPlayer = this.player;\n    this.players = { // customize AP Health and texts later\n      chrome: {\n        health: 100,\n        attackPower: 20,\n        name: \"Chrome\",\n        attackText: \"Chrome used \",\n        healText: \"Chrome used consume RAM and healed for \"\n      },\n      firefox: {\n        health: 100,\n        attackPower: 20,\n        name: \"Firefox\",\n        attackText: \"\",\n        healText: \"\"\n      },\n      ie: {\n        health: 100,\n        attackPower: 0,\n        name: \"Internet Explorer\",\n        attackText: \"Used Obsolete, it's pretty useless and did \",\n        healText: \"\"\n      },\n      safari: {\n        health: 100,\n        attackPower: 20,\n        name: \"Safari\",\n        attackText: \"\",\n        healText: \"\"\n      }\n    }\n    this.changeTurn = this.changeTurn.bind(this);\n  }\n  // i believe this can be done in event listener\n  // attackRequest(player, attack) {\n  //   if (this.currentPlayer === player) {\n\n  //   }\n  // }\n\n  pause() {\n    this.gameState = false;\n  }\n\n  changeTurn() {\n    // not sure how turn change will be handle yet\n    if (this.currentPlayer === this.player) {\n      this.currentPlayer = this.computer;\n      // this.attacking = false;\n    } else {\n      this.currentPlayer = this.player;\n      // this.attacking = false;\n    }\n  }\n\n  winner() {\n    if (this.player.health <= 0) {\n      console.log(`${this.computer.name} wins!`);\n      // this.reset();\n    }\n\n    if (this.computer.health <= 0) {\n      console.log(`${this.player.name} wins!`);\n      // this.reset();\n    }\n  }\n\n  gameOver() {\n    if (this.player.health <= 0 || this.computer.health <= 0) {\n      this.gameState = false;\n      return true;\n    }\n    return false;\n  }\n\n}\n\n// const canvas = document.getElementById(\"game-board\"); // changed to one after talking to oliver\n// const ctx = canvas.getContext(\"2d\");\n// const GAME_HEIGHT = 480;\n// const GAME_WIDTH = 840;","import \"./styles/index.css\";\nimport Computer from \"./js/computer\";\nimport Player from \"./js/player\";\nimport Game from \"./js/game\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"game-board\"); \n  const ctx = canvas.getContext(\"2d\");\n  const GAME_HEIGHT = 480;\n  const GAME_WIDTH = 840;\n  \n  let game;\n  let player;\n  let computer;\n  \n  const menu = document.getElementById(\"menu\");\n  const menuListen = e => {\n    if (e.keyCode === 32) {\n      ctx.clearRect(0, 0, 840, 480);\n      menu.classList.add(\"close-menu\");\n      window.removeEventListener(\"keypress\", menuListen)\n      window.addEventListener(\"keydown\", gameInput)\n      player = new Player(100, 20, \"Chrome\", GAME_HEIGHT, GAME_WIDTH);\n      computer = new Computer(100, 20, \"Firefox\", GAME_HEIGHT, GAME_WIDTH);\n      game = new Game(player, computer);\n      gameLoop();\n    }\n  };\n  \n  const gameOver = document.getElementById(\"game-over\");\n  const overListen = e => {\n    if (e.keyCode === 32) {\n      ctx.clearRect(0, 0, 840, 480);\n      // statusText.draw();\n      gameOver.classList.add(\"close-menu\");\n      window.removeEventListener(\"keypress\", overListen)\n      window.addEventListener(\"keydown\", gameInput)\n      player = new Player(100, 20, \"Chrome\", GAME_HEIGHT, GAME_WIDTH);\n      computer = new Computer(100, 20, \"Firefox\", GAME_HEIGHT, GAME_WIDTH);\n      game = new Game(player, computer);\n      gameLoop();\n    }\n  };\n  window.addEventListener(\"keypress\", menuListen);\n  \n  const gameInput = (e) => {\n    if (game.currentPlayer === game.player && game.activeAttack === false) {\n      let selected = game.battleOptions.selected;\n      switch (e.keyCode) {\n        case 37: // 37 is left arrow key\n          e.preventDefault();\n          selected -= 1;\n          if (selected < 0) { // change selected to allow player to choose move with keys\n            game.battleOptions.selected = game.battleOptions.options.length - 1;\n          } else {\n            game.battleOptions.selected = selected;\n          }\n          break;\n        case 39: // 39 is right arrow key\n          e.preventDefault();\n          selected++;\n          if (selected > game.battleOptions.options.length - 1) {\n            game.battleOptions.selected = 0;\n          } else {\n            game.battleOptions.selected = selected;\n          }\n          break;\n        case 13: // 13 is enter key\n          e.preventDefault();\n          // game.activeAttack = true;\n          const action = game.battleOptions.options[selected];\n          if (selected === game.battleOptions.options.length - 1) {\n            return;\n            // do this below action and return when quiting so turn doesnt change and make computer go\n            // action();\n          }\n          game.changeTurn();\n          action(game.player, game.computer);\n          break;\n        // case 65: // 65 is the a key\n        //   debugger\n        //   game.changeTurn();\n        //   game.player.attack(game.computer); // will evenutally call function that is currently selected in the battleText()\n        //   break;\n        // case 83: // 83 is s key\n        //   game.changeTurn();\n        //   game.player.heal();\n        //   break;\n        case 81: // 81 is q key\n          e.preventDefault();\n        // maybe set game to null and send to menu? or an are you sure pause? w/ y / n listeners\n          console.log(\"Button not implemented yet!\");\n          break;\n      }\n    } else return;\n  };\n  \n  let prevTime = 0;\n  \n  function gameLoop(timestamp) {\n    let dt = timestamp - prevTime;\n    prevTime = timestamp;\n  \n    ctx.clearRect(0, 0, 840, 480);\n    if (game.currentPlayer === game.computer) {\n      game.computer.playTurn(game.player);\n      game.currentPlayer = game.player;\n    }\n    // game.player.update(dt);\n    game.player.draw(ctx);\n    // debugger\n    // game.computer.update(dt);\n    game.computer.draw(ctx);\n    // debugger\n    game.playHealth.update(dt);\n    game.playHealth.draw(ctx);\n  \n    game.compHealth.update(dt);\n    game.compHealth.draw(ctx);\n  \n    // something along these lines\n    // if (game.currentPlayer.attacking) {\n    //   game.currentPlayer.statusText.draw(ctx);\n    // } else {\n      game.battleOptions.draw(ctx);\n    // }\n    // new GameInput(game);\n  \n    if (game.gameOver()) {\n      game.winner();\n      game = null;\n    }\n    // debugger\n    if (game) {\n      requestAnimationFrame(gameLoop);\n    } else {\n      cancelAnimationFrame(gameLoop);\n      window.removeEventListener(\"keydown\", gameInput);\n      // ctx.clearRect(0, 0, 840, 480);\n      // game = null;\n      gameOver.classList.remove(\"close-menu\");\n      window.addEventListener(\"keypress\", overListen);\n    }\n  }\n});"],"sourceRoot":""}